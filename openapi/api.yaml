openapi: "3.0.2"
info:
  title: rVPN Control Plane API
  version: "1.0"
servers:
  - url: https://{instance}/api/v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    target:
      name: target
      in: path
      required: true
      schema:
        type: string
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              description: Human-readable error description
          required:
            - message
      required:
        - error
    ListTargetsResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
        required:
          - name
    NewConnectionRequest:
      type: object
      properties:
        name:
          type: string
          description: human-readable machine name
        pubkey:
          type: string
          description: public key associated with the device
      required:
        - name
        - pubkey
    NewConnectionResponse:
      type: object
      properties:
        config:
          $ref: "#/components/schemas/ConnectionConfig"
        id:
          type: string
    GetConnectionResponse:
      type: object
      properties:
        config:
          $ref: "#/components/schemas/ConnectionConfig"
      required:
        - config
    ConnectionConfig:
      type: object
      properties:
        publicKey:
          type: string
          description: public key to use for wg profile
        clientIp:
          type: string
          description: ip for the client to have on the VPN network
        clientCidr:
          type: string
          description: cidr for the client ip (e.g /24)
        serverIp:
          type: string
          description: ip for the rVPN server
        serverPort:
          type: string
          description: port for the rVPN server
        dnsIp:
          type: string
          description: ip of the DNS server for the client to use
    UpdateTarget:
      type: object
      properties:
        userEmail:
          type: string
          description: email of the user to modify
        action:
          type: string
          description: action to complete for user (modify / delete)
        userType:
          type: string
          description: type of user (admin / user), if modifying
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

paths:
  /api/target/:
    get:
      summary: Returns available connection targets, this is NOT exhaustive
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTargetsResponse"
  /api/target/{target}/connection:
    post:
      summary: Creates a new device connection on a target
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/target"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewConnectionRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewConnectionResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/target/{target}/connection/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/target"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectionResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /target/{target}:
    put:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/target"
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/Unauthorized"
    patch:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/target"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTarget"
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/Unauthorized"
  /auth/login:
    get:
      summary: OAuth redirect handler
      description: |-
        User login page - send the user here in a browser to get an auth token and complete the OAuth flow;
        this is *not* an API route.
      parameters:
        - name: code
          in: query
          required: true
          description: code response from Google OAuth
          schema:
            type: string
      responses:
        "302":
          description: Login page
